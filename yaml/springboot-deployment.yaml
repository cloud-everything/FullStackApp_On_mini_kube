apiVersion: apps/v1
kind: Deployment
metadata:
  name: springboot-app
  labels:
    app: springboot-app
spec:
  replicas: 2  # Number of pod replicas
  selector:
    matchLabels:
      app: springboot-app
  template:
    metadata:
      labels:
        app: springboot-app
    spec:
      containers:
      - name: springboot-container
        image: dining_services:latest  # Replace with your Spring Boot Docker image
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080  # The port your Spring Boot app listens to
        env:
        - name: CORS_ALLOWED_ORIGINS
          value: "http://127.0.0.1"
        - name: CORS_ALLOWED_METHODS
          value: "GET,POST,PUT,DELETE,OPTIONS"
        - name: CORS_ALLOWED_HEADERS
          value: "*"
        - name: CORS_ALLOWED_CREDENTIALS
          value: "true"
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:mysql://mysql-0.mysql.mysql.svc.cluster.local:3306/dining_services"
        - name: SPRING_DATASOURCE_USERNAME
          value: "root"
        - name: SPRING_DATASOURCE_PASSWORD
          value: "Sql@10071999"
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "250m"
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
